
//  Created by Евгений Никитин on 11.05.2020.
//  Copyright © 2020 Evel-Devel. All rights reserved.

import Foundation

class FunctionsSet {
    static func getQuestions() -> [Question] {
        return [
            Question(question: ["Какие имена должны быть у функций?",
                                "У функций должны быть такие имена"],
                     image: "",
                     optionA: "Уникальные",
                     optionB: "Написанные на Русском",
                     optionC: "С заглавной буквы",
                     optionD: "Состоящие из 1 слова",
                     correctAnswer: 1,
                     questionId: 1,
                     helpText: "Функции – это самостоятельные фрагменты кода, решающие определенную задачу. Каждой функции присваивается уникальное имя, по которому ее можно идентифицировать и вызвать в нужный момент."),
            
            Question(question: ["Могут ли функции изменять внешние переменные после выполнения?",
                                "После своего выполнения функции могут изменять внешние переменные, так ли это?",
                                "В языке Swift функции могут после выполнения изменять внешние переменные, это так?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 2,
                     helpText: "Да, могут. Язык Swift предлагает достаточно гибкий единый синтаксис функций – от простых C-подобных функций без параметров до сложных методов в стиле Objective-C с локальными и внешними параметрами. Параметры могут служить как для простой инициализации значений внутри функции, так и для изменения внешних переменных после выполнения функции."),
            
            Question(question: ["Может ли функция быть результирующим значением другой функции?",
                                "Функция может быть результирующим значением другой функции?",
                                "Может ли функция быть результатом другой функции?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 3,
                     helpText: "Каждая функция в Swift имеет тип, описывающий тип параметров функции и тип возвращаемого значения. Тип функции можно использовать аналогично любым другим типам в Swift, т. е. одна функция может быть параметром другой функции либо ее результирующим значением. Функции также могут вкладываться друг в друга, что позволяет инкапсулировать определенный алгоритм внутри локального контекста."),
            
            Question(question: ["Может ли функция быть входным параметром другой функции?",
                                "Функция может быть входным параметром другой функции?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 4,
                     helpText: "Каждая функция в Swift имеет тип, описывающий тип параметров функции и тип возвращаемого значения. Тип функции можно использовать аналогично любым другим типам в Swift, т. е. одна функция может быть параметром другой функции либо ее результирующим значением. Функции также могут вкладываться друг в друга, что позволяет инкапсулировать определенный алгоритм внутри локального контекста."),
            
            Question(question: ["Является ли обязательным добавление входных параметров и возвращаемого значения у функции?",
                                "Указывать входные данные и возвращаемое значение обязательно для каждой функции?",
                                "Обязательно ли указывать каждой функции входные параметры и возвращаемое значение?"],
                     image: "",
                     optionA: "Нет",
                     optionB: "Да",
                     optionC: "Только входные параметры",
                     optionD: "Только возвращаемое значение",
                     correctAnswer: 1,
                     questionId: 5,
                     helpText: "При объявлении функции можно задать одно или несколько именованных типизированных значений, которые будут ее входными данными (или параметрами), а также тип значения, которое функция будет возвращать в качестве результата (или возвращаемый тип). В некоторых случаях функции могут не иметь входных параметров. Вот пример функции без входных параметров, которая при вызове всегда возвращает одно и то же значение типа String: func sayHelloWorld() -> String { return \"hello, world\"}"),
            
            Question(question: ["Обязаны ли мы указывать имя функции?",
                                "Каждой функции мы обязаны присвоить уникальное имя, так ли это?",
                                "Каждая функция в Swift должна иметь имя, это так?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 6,
                     helpText: "У каждой функции должно быть имя, которое отражает решаемую задачу. Чтобы воспользоваться функцией, ее нужно \"вызвать\", указав имя и входные значения (аргументы), соответствующие типам параметров этой функции. Аргументы функции всегда должны идти в том же порядке, в каком они были указаны при объявлении функции."),
            
            Question(question: ["При объявлении функции мы указываем тип возвращаемого значения после этого знака",
                                "После какого знака мы должны указывать тип возвращаемого значения функции?",
                                "После этого знака мы можем указать тип возвращаемого функцией значения"],
                     image: "",
                     optionA: "->",
                     optionB: "-",
                     optionC: "=>",
                     optionD: ":",
                     correctAnswer: 1,
                     questionId: 7,
                     helpText: "Тип возвращаемого значения функции ставится после результирующей стрелки -> (это дефис и правая угловая скобка)."),
            
            Question(question: ["Можем ли мы поместить вызов функции в print(_:separator:terminator:)?",
                                "Можно ли поместить в print(_:separator:terminator:) вызов функции?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 8,
                     helpText: "Вызов функции может быть завернут в print(_:separator:terminator:), чтобы напечатать полученную строку и увидеть возвращаемое значение (будет полезно использовать, когда функция возвращает какое-либо значение)."),
            
            Question(question: ["Функция завершает свою работу после выполнения оператора return?",
                                "После выполнения оператора return функция завершает свою работу?",
                                "Если в теле функции срабатывает оператор управления return, функция завершает свою работу?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 9,
                     helpText: "После выполнения оператора return функция завершает свою работу и возвращает необходимое текущее значение."),
            
            Question(question: ["Можем ли мы вызывать одну функцию многократно?",
                                "Поддерживается ли в Swift многократный вызов одной функции?",
                                "Можем ли мы вызывать одну и ту же функцию с разными входными параметрами?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 10,
                     helpText: "Функцию можно вызывать многократно и с разными входными значениями."),
            
            Question(question: ["Как \"Функция\" будет по английски, и каким ключевым словом обозначается в коде?",
                                "Выберите корректный вариант перевода \"Функция\" на английский язык, а так же ключевое слово, которым она обозначается в коде",
                                "Как переводится на английский язык \"Функция\" и как пишется ключевое слово, которым она обозначается в коде?"],
                     image: "",
                     optionA: "Function, func",
                     optionB: "Method, func",
                     optionC: "Function, function",
                     optionD: "Func, function",
                     correctAnswer: 1,
                     questionId: 11,
                     helpText: "Перевод: Function, ключевое слово: func"),
            
            Question(question: ["Можно ли использовать составные имена для входных параметров функции?",
                                "Для входных параметров функции мы можем использовать составные имена, так ли это?",
                                "Можем ли мы использовать для входных параметров функции составные имена?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 12,
                     helpText: "В языке Swift параметры функций и возвращаемые значения реализованы очень гибко. Разработчик может объявлять любые функции – от простейших, с одним безымянным параметром, до сложных, со множеством параметров и составными именами."),
            
            Question(question: ["Должны ли мы писать пустые круглые скобки при объявлении и вызове функции, если у нее нет входных параметров?",
                                "Если у функции нет входных параметров, должны ли мы писать пустые круглые скобки при ее объявлении и вызове?",
                                "При объявлении и вызове функции без входные параметров мы должны ставить пустые круглые скобки, так ли это?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 13,
                     helpText: "Несмотря на отсутствие параметров, в объявлении функции все равно нужно ставить скобки после имени. При вызове после имени функции также указываются пустые скобки."),
            
            Question(question: ["Функция, которой не указали тип возвращаемого значения, возвращает значение? Если да, то какого типа?",
                                "Если мы не указали значение возвращаемого типа, функция все же возвращает его, так ли это? Если да, то какого типа значение возвращается?"],
                     image: "",
                     optionA: "Да, Void",
                     optionB: "Да, Тип входного параметра",
                     optionC: "Да, String",
                     optionD: "Нет",
                     correctAnswer: 1,
                     questionId: 14,
                     helpText: "Строго говоря, функция, даже если ей не указали тип возвращаемого значения, все же возвращает значение, хотя оно нигде и не указано. Функции, для которых не задан возвращаемый тип, получают специальный тип Void. По сути, это просто пустой кортеж, т. е. кортеж с нулем элементов, который записывается как ()."),
            
            Question(question: ["Если функция, для которой указан возвращаемый тип, заканчивается оператором, который ничего не возвращает, что получится?",
                                "Если мы указали для функции тип возвращаемого значения, а на деле используем ничего не возвращающий return, что получится?",
                                ""],
                     image: "",
                     optionA: "Ошибка компиляции",
                     optionB: "Ничего",
                     optionC: "Получим значение",
                     optionD: "nil",
                     correctAnswer: 1,
                     questionId: 15,
                     helpText: "Хотя возвращаемые значения можно игнорировать, функция все же должна возвратить то, что задано в ее объявлении. Функция, для которой указан возвращаемый тип, не может заканчиваться оператором, который ничего не возвращает, иначе произойдет ошибка во время компиляции."),
            
            Question(question: ["Если нам нужно вернуть несколько значений из функции, какой тип мы должны указывать?",
                                "Какой возвращаемый тип указать, чтобы мы могли вернуть несколько значений в виде составного параметра?",
                                "Вернуть составной параметр, состоящий из нескольких значений из функции можно, указав этот тип"],
                     image: "",
                     optionA: "Кортеж",
                     optionB: "Массив",
                     optionC: "Множество",
                     optionD: "Void",
                     correctAnswer: 1,
                     questionId: 16,
                     helpText: "Вы можете использовать кортежный тип в качестве возвращаемого типа для функции для возврата нескольких значений в виде составного параметра."),
            
            Question(question: ["",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 17,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 18,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 19,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 20,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 21,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 22,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 23,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 24,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 25,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 26,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 27,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 28,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 29,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 30,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 31,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 32,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 33,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 34,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 35,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 36,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 37,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 38,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 39,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 40,
                     helpText: ""),
            
            Question(question: ["",
                                "",
                                ""],
                     image: "",
                     optionA: "",
                     optionB: "",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 41,
                     helpText: ""),
        ]
    }
}
