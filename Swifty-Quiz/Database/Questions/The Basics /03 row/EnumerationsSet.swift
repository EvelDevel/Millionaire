
//  Created by Евгений Никитин on 11.05.2020.
//  Copyright © 2020 Evel-Devel. All rights reserved.

import Foundation

class EnumerationsSet {
    static func getQuestions() -> [Question] {
        return [
            Question(question: ["Как по английски будут \"Перечисления\"?",
                                "\"Перечисления\", в переводе на английский?"],
                     image: "",
                     optionA: "Enumerations",
                     optionB: "Closures",
                     optionC: "Methods",
                     optionD: "Lists",
                     correctAnswer: 1,
                     questionId: 1,
                     helpText: "Правильный ответ: Enumerations."),
            
            Question(question: ["Каким ключевым словом перечисления обозначаются в коде?",
                                "В коде перечисления обозначаются этим ключевым словом",
                                "Как перечисления обозначаются в коде (ключевое слово)?"],
                     image: "",
                     optionA: "enum",
                     optionB: "func",
                     optionC: "enumiration",
                     optionD: "struct",
                     correctAnswer: 1,
                     questionId: 2,
                     helpText: "Перечисления начинаются с ключевого слова enum, после которого идет имя перечисления и полное его определение в фигурных скобках."),
            
            Question(question: ["Перечисления определяют ... для группы ассоциативных значений",
                                "",
                                ""],
                     image: "",
                     optionA: "Общий тип",
                     optionB: "Разные типы",
                     optionC: "Значения",
                     optionD: "Пустые переменные",
                     correctAnswer: 1,
                     questionId: 3,
                     helpText: "Перечисления определяют общий тип для группы ассоциативных значений и позволяют работать с этими значениями в типобезопасном режиме в вашем коде. Если вы знакомы с C, то вы знаете, что перечисления в C присваивают соответствующие имена набору целочисленных значений. Перечисления в Swift более гибкий инструмент и не должны предоставлять значения для каждого члена перечисления. Если значение (известное как “сырое” значение) предоставляется каждому члену перечисления, то это значение может быть строкой, символом или целочисленным значением, числом с плавающей точкой."),
            
            Question(question: ["Можем ли мы задавать значения любого типа членам перечисления?",
                                "Членам перечисления можно задать соответствующие значения любого типа, так ли это?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 4,
                     helpText: "Членам перечисления можно задать соответствующие значения любого типа, которые должны быть сохранены вместе с каждым кейсом перечисления. Вы можете определить общий набор соответствующих значений как часть одного перечисления, каждый из которых будет иметь разные наборы значений ассоциативных типов связанных с ними."),
            
            Question(question: ["Есть ли у перечислений возможность использовать вычисляемые свойства?",
                                "У перечислений есть вычисляемые свойства?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 5,
                     helpText: "Перечисления в Swift - типы “первого класса”. Они обладают особенностями, которые обычно поддерживаются классами, например, вычисляемые свойства, для предоставления дополнительной информации о текущем значении перечисления, методы экземпляра для дополнительной функциональности, относящейся к значениям, которые предоставляет перечисление."),
            
            Question(question: ["Можно ли устанавливать начальное значение элементам перечисления через инициализатор?",
                                "Можем ли мы объявлять инициализаторы для предоставления начального значения элементам перечисления?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 6,
                     helpText: "Перечисления могут объявлять инициализаторы для предоставления начального значения элементам. Они так же могут быть расширены для наращивания своей функциональности над её начальной реализацией."),
            
            Question(question: ["Могут ли перечисления соответствовать протоколам?",
                                "Могут ли перечисления соответствовать протоколам для обеспечения стандартной функциональности?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 7,
                     helpText: "Перечисления могут соответствовать протоколам для обеспечения стандартной функциональности."),
            
            Question(question: ["Как называются значения, объявленные в перечислении?",
                                "Как называются объявленные в перечислении значения?"],
                     image: "",
                     optionA: "case",
                     optionB: "point",
                     optionC: "counter",
                     optionD: "value",
                     correctAnswer: 1,
                     questionId: 8,
                     helpText: "Значения, объявленные в перечислении называются кейсами перечисления. Используйте ключевое слово case для включения нового кейса перечисления."),
            
            Question(question: ["При объявлении перечисления его кейсам присваиваются целочисленные значения по умолчанию?",
                                "Присваиваются ли кейсам перечисления целочисленные значения при объявлении?"],
                     image: "",
                     optionA: "Нет",
                     optionB: "Да, так называемые индексы",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 9,
                     helpText: "В отличии от C и Objective-C в Swift кейсам перечисления не присваиваются целочисленные значения по умолчанию при их создании. Например, если у вас есть перечисление, состоящие из 4 кейсов - они неявно не равны 0, 1, 2, 3. Вместо этого различные члены перечисления по праву полностью самостоятельны, с явно объявленным типом по имени этого перечисления."),
            
            Question(question: ["С какой буквы должны начинаться имена перечислений?",
                                "Имена перечислений начинаются с этой буквы"],
                     image: "",
                     optionA: "Заглавной",
                     optionB: "Маленькой",
                     optionC: "Без разницы",
                     optionD: "С особенной",
                     correctAnswer: 1,
                     questionId: 10,
                     helpText: "Каждое объявление перечисления объявляет и новый тип. Как и остальные типы в Swift, их имена (к примеру CompassPoint и Planet) должны начинаться с заглавной буквы. Имена перечислениям лучше давать особенные, а не те, которые вы можете использовать в нескольких местах, так чтобы они читались как само собой разумеющиеся"),
            
            Question(question: ["Можем ли мы записывать множественные значения члена перечисления в одну строку?",
                                "Множественные значения члена перечисления могут записваться в одну строку, так ли это?",
                                "Мы можем записывать множественные значения члена перечисления в одну строку, разделяя запятыми, так ли это?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "Да, разделяя точкой с запятой",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 11,
                     helpText: "Множественные значения члена перечисления могут записываться в одну строку, разделяясь между собой запятой."),
            
            Question(question: ["Если переменная уже имеет тип нашего перечисления, как мы можем присвоить ей новое значение через сокращенный точечный синтаксис?",
                                "Переменной, которая уже имеет тип перечисления, мы можем присвоить новое значения через сокращенный точечный синтаксис, как?"],
                     image: "",
                     optionA: "someVar = enumType.caseName",
                     optionB: "someVar = .caseName",
                     optionC: "someVar = caseName",
                     optionD: "someVar = enumType().caseName",
                     correctAnswer: 1,
                     questionId: 12,
                     helpText: "Мы можем присваивать новые значения переменным, имеющим тип наших перечислений через сокращенный точечный синтаксис, например: directionToHead = .east. Когда тип уже известен, вы можете не указывать его, присваивая только значения. Так делается для хорошо читаемого кода, когда работаете с явно указанными типами значений перечисления."),
            
            Question(question: ["При рассмотрении членов перечисления через switch, можем ли мы случайно пропустить case?",
                                "Можем ли мы пропустить case при просмотре всех возможных случаев нашего перечисления через switch?",
                                "Мы проходим по всем членам нашего перечисления через switch-case, и пропускаем один кейс, код скомпилируется?"],
                     image: "",
                     optionA: "Нет",
                     optionB: "Да",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 13,
                     helpText: "Как сказано в главе руководства “Управление потоком”, оператор switch должен быть исчерпывающим, когда рассматриваются члены перечисления. Если мы пропустим case, то код не скомпилируется, так как не рассматривается полный перечень членов перечисления. Требования к конструкции быть исчерпывающей, помогает случайно не пропустить член перечисления."),
            
            Question(question: ["Как мы можем пропустить и не описывать свой кейс для каждого члена перечисления?",
                                "С помощью чего мы можем пропустить один или несколько кейсов для разных членов перечисления?"],
                     image: "",
                     optionA: "default",
                     optionB: "Универсальные case",
                     optionC: "Просто пропустить ненужные",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 14,
                     helpText: "Если не удобно описывать кейс для каждого члена перечисления, то вы можете использовать кейс default, для закрытия всех остальных вариантов перечисления."),
            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 15,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 16,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 17,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 18,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 19,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 20,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 21,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 22,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 23,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 24,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 25,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 26,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 27,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 28,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 29,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 30,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 31,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 32,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 33,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 34,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 35,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 36,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 37,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 38,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 39,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 40,
//                     helpText: ""),
//            
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 41,
//                     helpText: ""),
        ]
    }
}
