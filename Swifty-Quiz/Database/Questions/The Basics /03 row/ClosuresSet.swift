
//  Created by Евгений Никитин on 11.05.2020.
//  Copyright © 2020 Evel-Devel. All rights reserved.

import Foundation

class ClosuresSet {
    static func getQuestions() -> [Question] {
        return [
            Question(question: ["Как \"Замыкания\" будет по английски?"],
                     image: "",
                     optionA: "Closures",
                     optionB: "Tuples",
                     optionC: "Methods",
                     optionD: "Generics",
                     correctAnswer: 1,
                     questionId: 1,
                     helpText: "Правильный ответ: Closures."),
            
            Question(question: ["Могут ли замыкания быть переданы и использованы в вашем коде?",
                                "Вы можете передавать и использовать замыкания в вашему коде, так ли это?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "Можно только использовать",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 2,
                     helpText: "Замыкания - это самодостаточные блоки с определенным функционалом, которые могут быть переданы и использованы в вашем коде. Замыкания в Swift похожи на блоки в C и Objective-C, и лямбды в других языках программирования."),

            Question(question: ["Что могут делать замыкания с переменными и константами?"],
                     image: "",
                     optionA: "Захватывать и хранить ссылки",
                     optionB: "Обрабатывать значения",
                     optionC: "Менять местами",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 3,
                     helpText: "Замыкания могут захватывать и хранить ссылки на любые константы и переменные из контекста, в котором они объявлены. Эта процедура известна как заключение этих констант и переменных, отсюда и название \"замыкание\". Swift выполняет всю работу с управлением памятью при захвате за вас."),

            Question(question: ["Являются ли глобальные функции замыканиями?",
                                "Являются ли вложенные функции замыканиями?",
                                "Являются ли вложенные и глобальные функции замыканиями?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "Только глобальные",
                     optionD: "Только вложенные",
                     correctAnswer: 1,
                     questionId: 4,
                     helpText: "Глобальные и вложенные функции являются частным случаем замыканий."),

            Question(question: ["Сколько разных форм замыканий есть в Swift?",
                                "Какое количество разных форм могут принимать замыкания?"],
                     image: "",
                     optionA: "Три",
                     optionB: "Две",
                     optionC: "Четыре",
                     optionD: "Одна",
                     correctAnswer: 1,
                     questionId: 5,
                     helpText: "Замыкания принимают одну из трех форм: Глобальные функции являются замыканиями, у которых есть имя и которые не захватывают никакие значения. Вложенные функции являются замыканиями, у которых есть имя и которые могут захватывать значения из включающей их функции. Выражения замыкания являются безымянными замыканиями, написанные в облегченном синтаксисе, которые могут захватывать значения из их окружающего контекста."),

            Question(question: ["Сколько пунктов включают в себя оптимизации синтаксиса замыканий в Swift (согласно официальной документации)?"],
                     image: "",
                     optionA: "Четыре",
                     optionB: "Три",
                     optionC: "Пять",
                     optionD: "Два",
                     correctAnswer: 1,
                     questionId: 6,
                     helpText: "Выражения замыкания в Swift имеют четкий, ясный, оптимизированный синтаксис в распространенных сценариях. Эти оптимизации включают: 1. Вывод типа параметра и возврат типа значения из контекста. 2. Неявные возвращающиеся значения однострочных замыканий. 3. Сокращенные имена параметров. 4. Синтаксис последующих замыканий."),

            Question(question: ["Метод стандартной библиотеки Swift, который сортирует массив значений, основываясь на результате сортирующего замыкания?",
                                "После завершения процесса сортировки, этот метод возвращает новый массив того же типа и размера как старый, с элементами в правильном порядке сортировки"],
                     image: "",
                     optionA: "sorted(by:)",
                     optionB: "filter()",
                     optionC: "joined()",
                     optionD: "split()",
                     correctAnswer: 1,
                     questionId: 7,
                     helpText: "В стандартной библиотеке Swift есть метод sorted(by:), который сортирует массив значений определенного типа, основываясь на результате сортирующего замыкания, которые вы ему передадите. После завершения процесса сортировки, метод sorted(by:) возвращает новый массив того же типа и размера как старый, с элементами в правильном порядке сортировки. Исходный массив этим методом не изменяется."),

            Question(question: ["Предпочтительный способ обеспечить сортирующее замыкание, которое пойдет в качестве аргумента для метода sorted(by:)?",
                                "Метод sorted(by:) принимает в качестве аргумента сортирующее замыкание, каким предпочтительным способом мы можем его создать?"],
                     image: "",
                     optionA: "Замыкающее выражение",
                     optionB: "Взять любую функцию",
                     optionC: "Создать функцию нужного типа",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 8,
                     helpText: "Один из способов обеспечить сортирующее замыкание, это написать нормальную функцию нужного типа, и передать его в качестве аргумента метода sorted(by:). Тем не менее, это довольно скучный способ написать то, что по сути, является функцией с одним выражением (a > b). В этом примере, было бы предпочтительнее написать сортирующее замыкание в одну строку, используя синтаксис замыкающего выражения."),

            Question(question: ["Может ли синтаксис замыкающего выражения использовать сквозные параметры?",
                                "Можем ли мы использовать сквозные параметры в синтаксисе замыкающего выражения?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 9,
                     helpText: "Синтаксис замыкающего выражения может использовать сквозные параметры."),

            Question(question: ["Можем ли мы передать значения по умолчанию в синтаксис замыканий?"],
                     image: "",
                     optionA: "Нет",
                     optionB: "Да",
                     optionC: "",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 10,
                     helpText: "Значения по умолчанию не могут быть переданы."),

            Question(question: ["Можем ли мы использовать кортежи как типы параметров в синтаксисе замыкающих выражений?",
                                "Можем ли мы использовать кортежи как типа возвращаемого значения в замыкающих выражениях?"],
                     image: "",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "Только как параметры",
                     optionD: "Только как возвращаемое значение",
                     correctAnswer: 1,
                     questionId: 11,
                     helpText: "Кортежи также могут быть использованы как типы параметров и как типы возвращаемого значения."),

            Question(question: ["Как, относительно фигурных скобок, пишутся тип возвращаемого значения и параметры для отднострочных замыкающих выражений?",
                                "Для однострочных замыкающих выражений, параметры и тип возвращаемого значения пишутся так (относительно фигурных скобок)"],
                     image: "",
                     optionA: "Внутри фигурных скобок",
                     optionB: "За фигурными скобками",
                     optionC: "Без разницы",
                     optionD: "",
                     correctAnswer: 1,
                     questionId: 12,
                     helpText: "Для однострочных замыкающих выражений, параметры и тип возвращаемого значения пишутся внутри фигурных скобок, а не снаружи."),

            Question(question: ["Какое ключевое слово в замыкающем выражении указывает, что дальше начинается тело замыкания?",
                                "Тело замыкания начинается после этого ключевого слова",
                                "После какого ключевого слова начинается тело замыкания?"],
                     image: "",
                     optionA: "in",
                     optionB: "out",
                     optionC: "after",
                     optionD: "for",
                     correctAnswer: 1,
                     questionId: 13,
                     helpText: "Начало тела замыкания содержит ключевое слово in. Это ключевое слово указывает, что объявление параметров и возвращаемого значения замыкания закончено, и тело замыкания вот-вот начнется."),

//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 14,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 15,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 16,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 17,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 18,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 19,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 20,
//                     helpText: ""),

//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 21,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 22,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 23,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 24,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 25,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 26,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 27,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 28,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 29,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 30,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 31,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 32,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 33,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 34,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 35,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 36,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 37,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 38,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 39,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 40,
//                     helpText: ""),
//
//            Question(question: ["",
//                                "",
//                                ""],
//                     image: "",
//                     optionA: "",
//                     optionB: "",
//                     optionC: "",
//                     optionD: "",
//                     correctAnswer: 1,
//                     questionId: 41,
//                     helpText: ""),
        ]
    }
}
