//
//  OptionalTypesSet.swift
//  Swifty-Quiz
//
//  Created by Евгений Никитин on 04.07.2021.
//  Copyright © 2021 Evel-Devel. All rights reserved.
//

import Foundation

class OptionalTypesSet {
    static func getQuestions() -> [Question] {
        return [
            Question(question: ["Какой тип используется, когда значение может отсутствовать?",
                                "Если значение может отсутствовать, какой тип мы будем использовать?",
                                "Этот тип используется, если значение может отсутствовать"],
                     image: "",
                     optionA: "Опциональный",
                     optionB: "Логический Bool",
                     optionC: "Кортеж",
                     optionD: "Неявный тип",
                     questionId: 689016638,
                     helpText: "Опциональные типы используются в тех случаях, когда значение может отсутствовать. Опциональный тип подразумевает, что возможны два варианта: или значение есть, и его можно извлечь из опционала, либо его вообще нет."),
            
            Question(question: ["Можно ли использовать переменную с явным, не опциональным типом данных, до ее инициализации?",
                                "Есть переменная с явным, не опциональным типом данных, можете ли вы использовать ее до инициализации?",
                                "Можно ли использовать переменную до инициализации, если она не является опционалом?"],
                     image: "",
                     optionA: "Нет",
                     optionB: "Да",
                     optionC: "",
                     optionD: "",
                     questionId: 156740503,
                     helpText: "Использование переменной или константы до ее инициализации в Swift невозможно (кроме значений с опциональными типами)."),
            
            Question(question: ["Каким образом мы можем установить опциональную переменную в состояние отсутствия значения?",
                                "Каким путем вы можете присвоить опциональной переменной отсутствующее значение?",
                                "Отсутствующее значение для опциональной переменной можно установить именно так"],
                     image: "",
                     optionA: "Присвоить nil",
                     optionB: "Присвоить 0",
                     optionC: "Присвоить литерал пустого массива",
                     optionD: ".removeValue",
                     questionId: 911230345,
                     helpText: "Мы можем установить опциональную переменную в состояние отсутствия значения, путем присвоения ему специального значения nil. nil не может быть использован с не опциональными константами и переменными. Если значение константы или переменной при определенных условиях в коде должно когда-нибудь отсутствовать, всегда объявляйте их как опциональное значение соответствующего типа."),
            
            Question(question: ["Каким образом мы можем проверить, содержит ли опционал значение?",
                                "Как мы можем узнать, содержит опционал значение или нет?",
                                "Таким образом вы можете узнать, содержит опционал значение или нет"],
                     image: "",
                     optionA: "Сравнивая с nil через if",
                     optionB: "Через оператор ===",
                     optionC: "Внутри цикла for-in",
                     optionD: "Через forced unwrap",
                     questionId: 575266688,
                     helpText: "Вы можете использовать инструкцию if, сравнивая опционал с nil, чтобы проверить, содержит ли опционал значение. Это сравнение можно сделать с помощью оператора «равенства» (==) или оператора «неравенства» (!=). Если опционал имеет значение, он будет рассматриваться как «неравным» nil."),
            
            Question(question: ["Если мы точно уверены, что опционал имеет значение, каким наиболее быстрым образом мы можем его получить?",
                                "Каким самым быстрым образом мы можем получить значение опционала, если уверены, что оно присутствует?",
                                "Как быстро получить значение опционала, если значение точно есть?"],
                     image: "",
                     optionA: "Принудительное извлечение (!)",
                     optionB: "Внутри цикла while",
                     optionC: "Привязка опционалов",
                     optionD: "Оператор ??",
                     questionId: 615093732,
                     helpText: "Если вы уверены, что опционал содержит значение, вы можете получить доступ к его значению, добавив восклицательный знак (!) в конце имени опционала. Восклицательный знак фактически говорит: «Я знаю точно, что этот опционал содержит значение, пожалуйста, используй его». Это выражение известно как Принудительное извлечение значения опционала."),
            
            Question(question: ["Как называется принудительное извлечение опционального значения?",
                                "Извлечение опционального значения с помощью оператора (!)"],
                     image: "",
                     optionA: "Force unwrap",
                     optionB: "Unwrapping",
                     optionC: "Optional Chaining",
                     optionD: "",
                     questionId: 458422941,
                     helpText: "Swift предлагает механизм извлечения опционального значения, который называется принудительным извлечением. При этом с помощью специального оператора значение опционального типа данных преобразуется в значение основного (для этого опционала) типа данных, например Int? преобразуется в Int. Для принудительного извлечения используется знак восклицания в качестве постфикса названия параметра, содержащего значение опционального типа. При принудительном извлечении значения вы должны гарантировать, что параметр с опциональным типом данных содержит какое-либо значение, а не равен nil. В противном случае будет иметь место попытка преобразовать в основной тип данных несуществующее значение, после компиляции такого кода мы столкнемся с ошибкой."),
            
            Question(question: ["Можем ли мы передать опциональный String куску кода, который ожидает неопциональный String?",
                                "Можете ли вы передать опциональный тип Double куску кода, который ждет неопциональный тип Double?"],
                     image: "",
                     optionA: "Нет",
                     optionB: "Да",
                     optionC: "",
                     optionD: "",
                     questionId: 367846471,
                     helpText: "Swift - язык типобезопасный, что означает, что Swift помогает вам понять, с какими типами значений ваш код может работать. Если кусок вашего кода ожидает String, безопасность типов не даст вам передать ему Int по ошибке. Кроме того, безопасность типов не позволит вам случайно передать опциональный String куску кода, который ожидает неопциональный String. Безопасность типов позволяет вам улавливать и исправлять ошибки как можно раньше в процессе разработки."),
            
            Question(question: ["Можем ли мы использовать значение с типом Int? (опциональный) как операнд в математической операции?",
                                "Можете ли вы использовать Double? (опциональный) как операнд в математической операции?"],
                     image: "",
                     optionA: "Нет",
                     optionB: "Да",
                     optionC: "",
                     optionD: "",
                     questionId: 160114527,
                     helpText: "Запомните, опциональный тип данных - это совершенно новый тип данных, поэтому, несмотря на то, что опционалы могут принимать значения основных типов данных, остальные свойства этих типов к опционалам не относятся. Например вы не можете использовать типы Int? или Double? при выполнении математических операций."),
            
            Question(question: ["Какой тип Swift присвоит константе convertedNum?",
                                "Константе convertedNum присвоится именно этот тип",
                                "Swift присвоит этот тип константе convertedNum"],
                     image: "TheBasics57",
                     optionA: "Int?",
                     optionB: "Int",
                     optionC: "String",
                     optionD: "Столкнемся с ошибкой",
                     questionId: 977608778,
                     helpText: "Поскольку метод Int() может иметь недопустимый аргумент, он возвращает опциональный Int, вместо Int. Опциональный Int записывается как Int?, а не Int. Знак вопроса означает, что содержащееся в ней значение является опциональным, что означает, что он может содержать некое Int значение, или он может вообще не содержать никакого значения. (Он не может содержать ничего другого, например, Bool значение или значение String. Он либо Int, либо вообще ничто)."),
        ]
    }
}
