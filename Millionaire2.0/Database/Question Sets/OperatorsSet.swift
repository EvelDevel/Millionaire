
//  Created by Евгений Никитин on 15.04.2020.
//  Copyright © 2020 Evel-Devel. All rights reserved.

import Foundation

class OperatorsSet {
    static func getQuestions() -> [Question] {
        return [
            
            Question(question: "Минимальная автономная единица, выполняющая команду",
                     optionA: "Операнд",
                     optionB: "Оператор",
                     optionC: "Куратор",
                     optionD: "Генератор",
                     correctAnswer: 2),
            
            Question(question: "Значение, которое операторы затрагивают в своей работе",
                     optionA: "Число",
                     optionB: "Оператор",
                     optionC: "Значение",
                     optionD: "Операнд",
                     correctAnswer: 4),
            
            Question(question: "Операторы, которые ставятся непосредственно перед величиной",
                     optionA: "Унарные",
                     optionB: "Постфиксные",
                     optionC: "Префиксные",
                     optionD: "Тренарные",
                     correctAnswer: 3),
            
            Question(question: "Операторы, которые ставятся сразу за величиной",
                     optionA: "Унарные",
                     optionB: "Постфиксные",
                     optionC: "Префиксные",
                     optionD: "Тренарные",
                     correctAnswer: 2),
            
            Question(question: "Операторы, которые применяются к одной величине",
                     optionA: "Унарные",
                     optionB: "Постфиксные",
                     optionC: "Префиксные",
                     optionD: "Тренарные",
                     correctAnswer: 1),
            
            Question(question: "Операторы, которые применяются к двум величинам",
                     optionA: "Простые",
                     optionB: "Тренарные",
                     optionC: "Унарные",
                     optionD: "Бинарные",
                     correctAnswer: 4),
            
            Question(question: "Операторы, применяемые к трем величинам",
                     optionA: "Простые",
                     optionB: "Тренарные",
                     optionC: "Унарные",
                     optionD: "Бинарные",
                     correctAnswer: 2),
            
            Question(question: "Какой оператор инициализирует или изменяет значение переменной",
                     optionA: "=",
                     optionB: "==",
                     optionC: "!=",
                     optionD: "<=",
                     correctAnswer: 1),
            
            Question(question: "Какой из этих операторов называется оператором присваивания?",
                     optionA: "=",
                     optionB: "==",
                     optionC: "!=",
                     optionD: "+=",
                     correctAnswer: 1),
            
            Question(question: "Если левая часть выражения является кортежем с несколькими значениями, можем ли мы присвоить сразу несколько констант или переменных его значениям?",
                     optionA: "Да, можем сразу : (x, y) = (1, 2)",
                     optionB: "Можем, но поочередно",
                     optionC: "Нет, не можем",
                     optionD: "Значение кортежей менять нельзя",
                     correctAnswer: 1),
            
            Question(question: "Может ли оператор присваивания в Swift возвращать значение?",
                     optionA: "Да",
                     optionB: "Нет",
                     optionC: "Только булевое значение",
                     optionD: "Только значение типа Int",
                     correctAnswer: 2),
            
            Question(question: "Сколько стандартных арифметических операторов поддерживает Swift?",
                     optionA: "3",
                     optionB: "4",
                     optionC: "5",
                     optionD: "2",
                     correctAnswer: 2),
            
            Question(question: "Какой арифметический оператор служит для конкатенации строковых значений?",
                     optionA: "Умножение",
                     optionB: "Деление",
                     optionC: "Сложение",
                     optionD: "Вычитание",
                     correctAnswer: 3),
            
            Question(question: "Какой оператор показывает, какое количество b помещается внутри a?",
                     optionA: "Присваивания",
                     optionB: "Целочисленного деления",
                     optionC: "Сложения",
                     optionD: "Деления",
                     correctAnswer: 2),
            
            Question(question: "Какой оператор возвращает остаток от деления a на b?",
                     optionA: "Деления",
                     optionB: "Целочисленного деления",
                     optionC: "Сложения",
                     optionD: "Умножения",
                     correctAnswer: 2),
            
            Question(question: "Какой результат будет в выражении 9 % 4?",
                     optionA: "1",
                     optionB: "2",
                     optionC: "3",
                     optionD: "4",
                     correctAnswer: 1),
            
            Question(question: "Какой результат будет в выражении -9 % 4?",
                     optionA: "1",
                     optionB: "-1",
                     optionC: "2",
                     optionD: "-2",
                     correctAnswer: 2),
            
            Question(question: "Какой результат будет в выражении 9 % -4?",
                     optionA: "2",
                     optionB: "1",
                     optionC: "4",
                     optionD: "8",
                     correctAnswer: 2),
            
            Question(question: "Как правильно поставить оператор унарного префиксного минуса?",
                     optionA: "- 2",
                     optionB: "-1",
                     optionC: "Первый и второй варианты",
                     optionD: "8 -",
                     correctAnswer: 2),
            
            Question(question: "Как называется подобный оператор: a += 2?",
                     optionA: "Сложения",
                     optionB: "Присваивания",
                     optionC: "Составного деления",
                     optionD: "Присваивания со сложением",
                     correctAnswer: 4),
            
            Question(question: "Сколько операторов сравнения поддерживает Swift?",
                     optionA: "4",
                     optionB: "8",
                     optionC: "6",
                     optionD: "2",
                     correctAnswer: 3),
            
            Question(question: "Как пишется оператор сравнения равно?",
                     optionA: "==",
                     optionB: "=",
                     optionC: "===",
                     optionD: "!=",
                     correctAnswer: 1),
            
            Question(question: "Как пишется оператор сравнения больше либо равно?",
                     optionA: "=>",
                     optionB: "<=",
                     optionC: ">=",
                     optionD: "=<",
                     correctAnswer: 3),
            
            Question(question: "Как пишется оператор проверки на идентичность / тождественность?",
                     optionA: "===",
                     optionB: "==",
                     optionC: "=",
                     optionD: "!==",
                     correctAnswer: 1),
            
            Question(question: "Что возвращают выражения с использованием операторов сравнения?",
                     optionA: "Bool",
                     optionB: "Int",
                     optionC: "Double",
                     optionD: "nil",
                     correctAnswer: 1),
            
            Question(question: "Синтаксис какого оператора выглядит следующим образом: выражение ? действие1 : действие2?",
                     optionA: "Унарный оператор",
                     optionB: "Бинарный инфиксный оператор",
                     optionC: "Оператор присваивания",
                     optionD: "Тернарный условный оператор",
                     correctAnswer: 4),
            
            Question(question: "Какие операторы диапазона есть в Swift?",
                     optionA: "Закрытого диапазона",
                     optionB: "Открытого диапазона",
                     optionC: "Два первых варианта верны",
                     optionD: "Замкнутого и полузамкнутого",
                     correctAnswer: 4),
            
            Question(question: "Оператор этого диапазона задает диапазон от a до b, включая сами a и b. При этом значение a не должно превышать b",
                     optionA: "Закрытого",
                     optionB: "Замкнутого",
                     optionC: "Открытого",
                     optionD: "Приоткрытого",
                     correctAnswer: 2),
            
            Question(question: "Оператор этого диапазона задает диапазон от a до b, исключая значение b",
                     optionA: "Полузакрутого",
                     optionB: "Полуоткрытого",
                     optionC: "Полузамкнутого",
                     optionD: "Открытого",
                     correctAnswer: 3),
            
            Question(question: "Диапазон, который продолжается насколько возможно, но только в одну сторону, например, диапазон, который включает все элементы массива, начиная от 2",
                     optionA: "Открытый",
                     optionB: "Односторонний",
                     optionC: "Бесконечный",
                     optionD: "Замкнутый",
                     correctAnswer: 2),
            
            Question(question: "Сколько стандартный логических операторов поддерживает Swift?",
                     optionA: "2",
                     optionB: "4",
                     optionC: "6",
                     optionD: "3",
                     correctAnswer: 4),
            
            Question(question: "Какой логический оператор инвертирует булево значение — true меняется на false, а false становится true?",
                     optionA: "!",
                     optionB: "&&",
                     optionC: "||",
                     optionD: "=",
                     correctAnswer: 1),
            
            Question(question: "Какой логический оператор дает на выходе true тогда и только тогда, когда оба его операнда также равны true?",
                     optionA: "|| ИЛИ",
                     optionB: "&& И",
                     optionC: "! НЕ",
                     optionD: "|&|",
                     correctAnswer: 2),
            
            Question(question: "Если при использовании логического оператора И (&&), первое выражение будет false, будет ли проверяться второе выражение?",
                     optionA: "Да",
                     optionB: "Только если второе тоже false",
                     optionC: "Затрудняюсь ответить",
                     optionD: "Нет",
                     correctAnswer: 4),
            
            Question(question: "Сколько логических операторов являются инфиксными?",
                     optionA: "1",
                     optionB: "2",
                     optionC: "3",
                     optionD: "Все",
                     correctAnswer: 2),
            
            Question(question: "С помощью этого оператора можно создавать логические выражения, которые будут давать true, если хотя бы один из операндов равен true",
                     optionA: "Логическое НЕ !",
                     optionB: "Логическое ИЛИ ||",
                     optionC: "Логическое И &&",
                     optionD: "Все ответы верны",
                     correctAnswer: 2),
            
            Question(question: "Если левая часть выражения с логическим ИЛИ равна true, будет ли анализироваться правая?",
                     optionA: "Обязательно будет",
                     optionB: "Затрудняюсь ответить",
                     optionC: "Не будет, это бессмысленно",
                     optionD: "Будет, только если она true",
                     correctAnswer: 3)
        ]
    }
}
